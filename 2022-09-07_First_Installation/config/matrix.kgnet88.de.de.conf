server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name matrix.kgnet88.de;

    #
    # Certificate configuration
    #

    # RSA certificates
    ssl_certificate /etc/letsencrypt/matrix.kgnet88.de/rsa/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/matrix.kgnet88.de/rsa/key.pem;
    # ECC certificates
    ssl_certificate /etc/letsencrypt/matrix.kgnet88.de/ecc/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/matrix.kgnet88.de/ecc/key.pem;

    # This should be ca.pem (certificate with the additional intermediate certifica$
    # See here: https://certbot.eff.org/docs/using.html
    # ECC
    ssl_trusted_certificate /etc/letsencrypt/matrix.kgnet88.de/ecc/ca.pem;

    # Include SSL and header snippets
    include /etc/nginx/snippets/ssl.conf;
    include /etc/nginx/snippets/headers.conf;

    #
    # Matrix Synapse configuration
    #

    # Disable error and access log.
    # This way, no IP will be logged by nginx
    access_log off;
    error_log off;

    # Increase timeout values
    # Useful if rooms (on different server) act very slowly.
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;

    # If you don't wanna serve a site, comment this out
    #root /var/www/html;
    #index index.html index.htm;

    location ~ ^(/_matrix|/_synapse/client) {
      proxy_pass http://localhost:8008;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $host;

      client_max_body_size 50M;
    }

    location /.well-known/matrix/server {
      return 200 '{"m.server": "matrix.kgnet88.de:443"}';
      add_header Content-Type application/json;
    }

    location /.well-known/matrix/client {
      return 200 '{"m.homeserver": {"base_url": "https://matrix.kgnet88.de"}}';
      add_header Content-Type application/json;
      add_header "Access-Control-Allow-Origin" *;
    }
}